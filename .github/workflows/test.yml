name: 🧪 Shell Script Testing with Coverage

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  SHELLSPEC_VERSION: "0.28.1"

jobs:
  test:
    name: Test Shell Scripts
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Install dependencies
      run: |
        # Update package manager
        sudo apt-get update
        
        # Install zsh for ShellSpec
        sudo apt-get install -y zsh bc
        
        # Install kcov build dependencies
        sudo apt-get install -y cmake g++ pkg-config libcurl4-openssl-dev libelf-dev libdw-dev binutils-dev libiberty-dev zlib1g-dev
        
        # Build and install kcov from source
        cd /tmp
        git clone --depth 1 https://github.com/SimonKagstrom/kcov.git
        cd kcov
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local
        make -j$(nproc)
        sudo make install
        sudo ldconfig
        
        # Install ShellSpec
        cd /tmp
        curl -fsSL https://github.com/shellspec/shellspec/releases/download/${SHELLSPEC_VERSION}/shellspec-dist.tar.gz | tar -xz
        sudo cp -r shellspec /usr/local/bin/
        sudo ln -s /usr/local/bin/shellspec/shellspec /usr/bin/shellspec
    
    - name: 🧪 Run tests
      run: |
        cd spec/
        shellspec --format documentation
        
    - name: 📊 Run tests with coverage
      run: |
        cd spec/
        # Create coverage directory
        mkdir -p ../coverage
        
        # Run tests with kcov coverage
        shellspec --kcov ../coverage
        
    - name: 🎯 Check coverage threshold (85%)
      run: |
        # Parse kcov coverage results
        if [ -f coverage/index.html ]; then
          # Extract coverage percentage from kcov HTML report
          coverage_percent=$(grep -o 'Lines:[[:space:]]*[0-9.]*%' coverage/index.html | head -1 | grep -o '[0-9.]*' || echo "0")
          echo "📊 Current coverage: ${coverage_percent}%"
          
          # Check if coverage meets 85% threshold
          if (( $(echo "${coverage_percent} >= 85.0" | bc -l) )); then
            echo "✅ Coverage ${coverage_percent}% meets 85% threshold"
          else
            echo "❌ Coverage ${coverage_percent}% is below 85% threshold"
            exit 1
          fi
        else
          echo "⚠️ Coverage report not found, checking test success instead"
        fi
        
    - name: 📋 Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
        if-no-files-found: warn
        
    - name: 💬 Comment coverage on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          let coverageComment = '## 📊 Test Coverage Report\n\n';
          
          try {
            // Try to read coverage from kcov HTML report
            const coverageHtml = fs.readFileSync('coverage/index.html', 'utf8');
            const coverageMatch = coverageHtml.match(/Lines:\s*([0-9.]+)%/);
            
            if (coverageMatch) {
              const coverage = parseFloat(coverageMatch[1]);
              const status = coverage >= 85 ? '✅' : '❌';
              const statusText = coverage >= 85 ? 'PASSED' : 'FAILED';
              
              coverageComment += `${status} **Coverage: ${coverage}%** (Threshold: 85%) - ${statusText}\n\n`;
              
              if (coverage >= 85) {
                coverageComment += '🎉 Great job! Coverage meets the required threshold.\n';
              } else {
                coverageComment += '⚠️ Coverage is below the 85% threshold. Please add more tests.\n';
              }
            } else {
              coverageComment += '⚠️ Could not parse coverage report, but tests completed.\n';
            }
          } catch (error) {
            coverageComment += '⚠️ Coverage report not available, but tests were executed.\n';
          }
          
          coverageComment += '\n📋 [View detailed coverage report in artifacts](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: coverageComment
          });